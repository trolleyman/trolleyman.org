"""
Django settings for trolleyman project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import random
import os
import io

import decouple  # django-decouple


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = decouple.config('DEBUG', default=True, cast=bool)

# SECURITY WARNING: keep the secret key used in production secret!
try:
    SECRET_KEY = decouple.config('SECRET_KEY')
except decouple.UndefinedValueError as e:
    # Generate random secret key
    SECRET_KEY = ''.join(random.choice('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') for _ in range(24))
    with open(os.path.join(BASE_DIR, '.env'), 'ba+') as f:
        if f.tell() > 0:
            f.seek(-1, io.SEEK_END)
            if f.read(1) != b'\n':
                f.write(b'\n')
        f.write('SECRET_KEY={}\n'.format(SECRET_KEY).encode())


if not DEBUG:
    # Production
    ALLOWED_HOSTS = [
        '.trolleyman.org',
        'trolleyman.org',
        '.callumgtolley.uk',
        'callumgtolley.uk',
        '138.68.156.104',
        '2a03:b0c0:1:d0::a00:b001',
        'localhost',
        '127.0.0.1',
        '::1'
    ]
    CONN_MAX_AGE = None
    ADMINS = [('Callum Tolley', 'cgtrolley@gmail.com')]
else:
    # Debug
    ALLOWED_HOSTS = [
        'localhost',
        '127.0.0.1',
        '::1'
    ]

LOGS_DIR = os.path.join(BASE_DIR, 'logs')
if not os.path.exists(LOGS_DIR):
    os.mkdir(LOGS_DIR)
LOG_PATH = os.path.join(LOGS_DIR, 'django.log')

INTERNAL_IPS = [
    '127.0.0.1',
    '::1'
]

DEFAULT_FROM_EMAIL = 'admin@callumgtolley.uk'
SERVER_EMAIL = 'admin@callumgtolley.uk'

# Application definition

INSTALLED_APPS = [
    'git_hook.apps.GitHookConfig',
    'FlappyClone.apps.FlappyCloneConfig',
    'linc.apps.LincConfig',
    'homepage.apps.HomepageConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compressor',  # django-compressor
]

if not DEBUG:
    RECAPTCHA_PUBLIC_KEY = '6LfdxE8UAAAAAN1sVEiQVDVomnIyvz-Pa4FstoHT'
    RECAPTCHA_PRIVATE_KEY = decouple.config('RECAPTCHA_PRIVATE_KEY')
else:
    # !!!TEST KEYS - Do not use in prod!!!
    RECAPTCHA_PUBLIC_KEY = '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI'
    RECAPTCHA_PRIVATE_KEY = '6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe'

# Get Github webhook secret
if DEBUG:
    GITHUB_WEBHOOK_SECRET = ''
else:
    GITHUB_WEBHOOK_SECRET = decouple.config('GITHUB_WEBHOOK_SECRET').encode('utf-8')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'trolleyman.urls'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_PATH,
            'formatter': 'verbose',
        },
        'rotating_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': LOG_PATH,
            'maxBytes': 1024*1024*5,  # 5 MB
            'backupCount': 10,
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
        },
    },
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
        'verbose': {
            'format': '%(asctime)s [%(levelname)s] (PID %(process)d, TID %(thread)d) %(module)s - %(name)s: %(message)s'
        },
    },
    'loggers': {},
}
if DEBUG:
    LOGGING['loggers'] = {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
        },
    }
else:
    LOGGING['loggers'] = {
        'django': {
            'handlers': ['rotating_file'],
            'level': 'DEBUG',
        },
        'django.request': {
            'handlers': ['rotating_file'],
            'level': 'DEBUG',
        },
    }
